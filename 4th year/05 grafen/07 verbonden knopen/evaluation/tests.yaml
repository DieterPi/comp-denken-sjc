- tab: Feedback
  testcases:
  - expression: verbonden_bogen( C, [('A', 'B', 3), ('B', 'C', 2), ('C', 'A', 5),
      ('C', 'D', 2), ('D', 'B', 8), ('B', 'E', 3)] )
    stdout: "[('B', 'C', 2), ('C', 'A', 5), ('C', 'D', 2)]"
  - expression: verbonden_bogen( G, [('H', 'G', 36), ('G', 'D', 36), ('H', 'C', 13),
      ('H', 'E', 31), ('H', 'F', 22), ('H', 'A', 8), ('A', 'B', 3), ('F', 'I', 27),
      ('B', 'H', 30), ('A', 'D', 18), ('D', 'I', 16), ('A', 'I', 19), ('B', 'E', 24),
      ('H', 'I', 17), ('I', 'E', 10), ('G', 'B', 8), ('F', 'G', 36), ('F', 'C', 35)]
      )
    stdout: "[('H', 'G', 36), ('G', 'D', 36), ('G', 'B', 8), ('F', 'G', 36)]"
  - expression: verbonden_bogen( C, [('E', 'D'), ('D', 'C'), ('D', 'B'), ('C', 'A'),
      ('E', 'C'), ('B', 'C'), ('B', 'A'), ('E', 'B'), ('A', 'D')] )
    stdout: "[('D', 'C'), ('C', 'A'), ('E', 'C'), ('B', 'C')]"
  - expression: verbonden_bogen( C, [('A', 'C', 6), ('C', 'B', 5), ('A', 'B', 6)]
      )
    stdout: "[('A', 'C', 6), ('C', 'B', 5)]"
  - expression: verbonden_bogen( E, [('H', 'F'), ('H', 'C'), ('H', 'E'), ('H', 'I'),
      ('H', 'A'), ('I', 'J'), ('H', 'G'), ('H', 'B'), ('H', 'D'), ('A', 'G'), ('F',
      'E'), ('F', 'I'), ('E', 'G'), ('I', 'E'), ('E', 'C'), ('A', 'C'), ('G', 'J'),
      ('D', 'G'), ('C', 'B'), ('J', 'B'), ('A', 'I'), ('E', 'A'), ('F', 'G'), ('A',
      'D'), ('F', 'B'), ('A', 'B'), ('B', 'E'), ('E', 'D'), ('J', 'C'), ('H', 'J'),
      ('B', 'G'), ('B', 'I'), ('B', 'D'), ('F', 'C'), ('D', 'C')] )
    stdout: "[('H', 'E'), ('F', 'E'), ('E', 'G'), ('I', 'E'), ('E', 'C'), ('E', 'A'),\
      \ ('B', 'E'), ('E', 'D')]"
  - expression: verbonden_bogen( B, [('C', 'E'), ('E', 'B'), ('C', 'A'), ('C', 'D'),
      ('E', 'A'), ('C', 'B'), ('A', 'B'), ('B', 'D'), ('D', 'E'), ('A', 'D')] )
    stdout: "[('E', 'B'), ('C', 'B'), ('A', 'B'), ('B', 'D')]"
  - expression: verbonden_bogen( C, [('E', 'F', 15), ('F', 'D', 14), ('F', 'A', 21),
      ('E', 'I', 14), ('A', 'C', 4), ('F', 'H', 21), ('H', 'B', 6), ('F', 'G', 10),
      ('D', 'A', 12), ('C', 'E', 11), ('C', 'H', 12), ('A', 'B', 15), ('A', 'G', 12),
      ('F', 'C', 3)] )
    stdout: "[('A', 'C', 4), ('C', 'E', 11), ('C', 'H', 12), ('F', 'C', 3)]"
  - expression: verbonden_bogen( A, [('A', 'C'), ('C', 'B'), ('A', 'D'), ('D', 'E'),
      ('B', 'D')] )
    stdout: "[('A', 'C'), ('A', 'D')]"
  - expression: verbonden_bogen( D, [('A', 'C'), ('C', 'B'), ('C', 'E'), ('B', 'D'),
      ('D', 'E'), ('D', 'C'), ('D', 'A'), ('E', 'B'), ('A', 'E'), ('B', 'A')] )
    stdout: "[('B', 'D'), ('D', 'E'), ('D', 'C'), ('D', 'A')]"
  - expression: verbonden_bogen( H, [('B', 'D', 6), ('D', 'H', 6), ('D', 'A', 8),
      ('D', 'F', 14), ('A', 'G', 4), ('D', 'E', 9), ('A', 'C', 15), ('C', 'E', 8),
      ('G', 'B', 3), ('D', 'G', 11), ('A', 'E', 3), ('H', 'A', 10), ('E', 'H', 14),
      ('B', 'H', 8), ('G', 'F', 4), ('F', 'A', 4), ('B', 'F', 15), ('C', 'F', 10)]
      )
    stdout: "[('D', 'H', 6), ('H', 'A', 10), ('E', 'H', 14), ('B', 'H', 8)]"
  - expression: verbonden_bogen( E, [('F', 'C', 6), ('C', 'H', 6), ('H', 'G', 7),
      ('G', 'A', 7), ('C', 'D', 4), ('F', 'E', 3), ('C', 'B', 5), ('H', 'A', 4), ('B',
      'A', 5), ('G', 'E', 6), ('E', 'H', 5)] )
    stdout: "[('F', 'E', 3), ('G', 'E', 6), ('E', 'H', 5)]"
  - expression: verbonden_bogen( D, [('D', 'E'), ('D', 'B'), ('D', 'F'), ('E', 'A'),
      ('B', 'C'), ('A', 'B'), ('C', 'D'), ('A', 'F'), ('F', 'C'), ('B', 'F')] )
    stdout: "[('D', 'E'), ('D', 'B'), ('D', 'F'), ('C', 'D')]"
  - expression: verbonden_bogen( B, [('C', 'B'), ('C', 'A'), ('B', 'D'), ('B', 'E'),
      ('E', 'D'), ('E', 'A'), ('D', 'C'), ('A', 'B')] )
    stdout: "[('C', 'B'), ('B', 'D'), ('B', 'E'), ('A', 'B')]"
  - expression: verbonden_bogen( E, [('F', 'J'), ('F', 'D'), ('F', 'B'), ('J', 'H'),
      ('F', 'A'), ('F', 'I'), ('H', 'C'), ('I', 'G'), ('J', 'E'), ('D', 'J'), ('I',
      'B'), ('D', 'I'), ('I', 'H'), ('F', 'C'), ('B', 'A'), ('C', 'J'), ('B', 'E'),
      ('B', 'J'), ('E', 'C'), ('C', 'B'), ('G', 'F'), ('I', 'A'), ('A', 'J'), ('B',
      'G'), ('D', 'G'), ('H', 'B'), ('C', 'G'), ('J', 'I'), ('I', 'C'), ('D', 'E'),
      ('E', 'F'), ('H', 'E'), ('H', 'F'), ('B', 'D'), ('E', 'G'), ('H', 'A'), ('G',
      'H'), ('C', 'D'), ('I', 'E')] )
    stdout: "[('J', 'E'), ('B', 'E'), ('E', 'C'), ('D', 'E'), ('E', 'F'), ('H', 'E'),\
      \ ('E', 'G'), ('I', 'E')]"
  - expression: verbonden_bogen( A, [('H', 'I', 13), ('I', 'D', 14), ('H', 'E', 7),
      ('I', 'A', 28), ('A', 'C', 17), ('A', 'J', 11), ('H', 'G', 27), ('D', 'F', 18),
      ('H', 'B', 6), ('A', 'B', 13), ('B', 'J', 6), ('D', 'C', 7), ('C', 'I', 17),
      ('B', 'G', 15), ('A', 'F', 13), ('H', 'A', 5), ('I', 'G', 10), ('G', 'E', 10),
      ('J', 'C', 2), ('C', 'G', 6), ('A', 'D', 20), ('B', 'F', 29), ('J', 'H', 25),
      ('E', 'B', 14), ('D', 'B', 12), ('G', 'A', 20), ('I', 'E', 6), ('D', 'G', 8),
      ('J', 'I', 16), ('J', 'F', 12), ('D', 'J', 25), ('C', 'H', 19), ('E', 'C', 2),
      ('A', 'E', 2)] )
    stdout: "[('I', 'A', 28), ('A', 'C', 17), ('A', 'J', 11), ('A', 'B', 13), ('A',\
      \ 'F', 13), ('H', 'A', 5), ('A', 'D', 20), ('G', 'A', 20), ('A', 'E', 2)]"
  - expression: verbonden_bogen( D, [('B', 'D', 9), ('D', 'C', 7), ('B', 'A', 4),
      ('A', 'C', 8)] )
    stdout: "[('B', 'D', 9), ('D', 'C', 7)]"
  - expression: verbonden_bogen( B, [('C', 'A', 6), ('A', 'G', 20), ('C', 'B', 29),
      ('B', 'E', 29), ('B', 'D', 5), ('C', 'H', 2), ('H', 'F', 3), ('A', 'H', 23),
      ('F', 'B', 2), ('B', 'G', 10), ('C', 'D', 11), ('B', 'H', 17), ('E', 'F', 27),
      ('G', 'E', 11), ('E', 'C', 5)] )
    stdout: "[('C', 'B', 29), ('B', 'E', 29), ('B', 'D', 5), ('F', 'B', 2), ('B',\
      \ 'G', 10), ('B', 'H', 17)]"
  - expression: verbonden_bogen( B, [('A', 'C'), ('A', 'B'), ('B', 'C')] )
    stdout: "[('A', 'B'), ('B', 'C')]"
  - expression: verbonden_bogen( B, [('J', 'A', 3), ('A', 'I', 11), ('A', 'H', 16),
      ('J', 'C', 10), ('H', 'B', 12), ('A', 'E', 8), ('J', 'G', 5), ('E', 'D', 8),
      ('G', 'F', 15), ('E', 'I', 8), ('F', 'H', 14), ('D', 'J', 11), ('C', 'H', 4),
      ('E', 'C', 12), ('C', 'D', 10), ('G', 'I', 15), ('D', 'H', 6), ('F', 'D', 11),
      ('F', 'C', 6), ('D', 'G', 3), ('D', 'I', 5), ('F', 'A', 5), ('F', 'E', 3), ('B',
      'J', 8), ('H', 'G', 6), ('B', 'D', 2), ('C', 'G', 3), ('G', 'B', 16), ('A',
      'B', 7), ('I', 'H', 6), ('D', 'A', 5), ('F', 'I', 5), ('I', 'B', 10), ('J',
      'E', 6)] )
    stdout: "[('H', 'B', 12), ('B', 'J', 8), ('B', 'D', 2), ('G', 'B', 16), ('A',\
      \ 'B', 7), ('I', 'B', 10)]"
  - expression: verbonden_bogen( B, [('E', 'C'), ('E', 'A'), ('E', 'D'), ('A', 'B'),
      ('C', 'B'), ('D', 'C'), ('C', 'A'), ('D', 'A'), ('B', 'E'), ('D', 'B')] )
    stdout: "[('A', 'B'), ('C', 'B'), ('B', 'E'), ('D', 'B')]"
